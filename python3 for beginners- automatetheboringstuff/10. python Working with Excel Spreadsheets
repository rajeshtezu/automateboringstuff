## Working with Excel Spreadsheets:
-----------------------------------
-> "openpyxl" module allows python to read and modify excell sheets.
 
 # Excel Documents:
 ------------------
 -> An Excel spreadsheet document is called a workbook.
 -> A single workbook is saved in a file with the .xlsx extension.
 -> Each workbook can contain multiple sheets (also called worksheets).
 -> The sheet the user is currently viewing (or last viewed before closing Excel) is called the active sheet.
 -> Each sheet has columns (addressed by letters starting at A) and rows (addressed by numbers starting at 1).

-> install openpyxl:    $pip3 install openpyxl


# Reading Excel Documents:
--------------------------
-> Create an example.xlsx as shown in book.


# Opening Excel Documents with OpenPyXL:
----------------------------------------
-> openpyxl.load_workbook() function takes in the filename and returns a value of the workbook data type.

   Eg:
   >>> import openpyxl
   >>> wb = openpyxl.load_workbook('example.xlsx')
   >>> type(wb)
   <class 'openpyxl.workbook.workbook.Workbook'>


# Getting Sheets from the Workbook:
-----------------------------------
-> get_sheet_names(): returns a list of all the sheet names in the workbook.

   Eg:
   >>> import openpyxl
   >>> wb = openpyxl.load_workbook('example.xlsx')
   >>> wb.get_sheet_names()
   ['Sheet1', 'Sheet2', 'Sheet3']
   >>> sheet = wb.get_sheet_by_name('Sheet3')    ---> returns Worksheet object (sheet representation in program)
   >>> sheet
   <Worksheet "Sheet3">
   >>> type(sheet) 
   <class 'openpyxl.worksheet.worksheet.Worksheet'>
   >>> sheet.title        ----> returns sheet name
   'Sheet3'
   >>> anotherSheet = wb.active    ----> returns active sheet of workbook
   >>> anotherSheet
   <Worksheet "Sheet1">


# Getting Cells from the Sheets:
--------------------------------
-> Once you have a Worksheet object, you can access a Cell object by its name.

   Eg:
   >>> import openpyxl
   >>> wb = openpyxl.load_workbook('example.xlsx')
   >>> sheet = wb.get_sheet_by_name('Sheet1')
   >>> sheet['A1']
   <Cell Sheet1.A1>
   >>> sheet['A1'].value
   datetime.datetime(2015, 4, 5, 13, 34, 2)
   >>> c = sheet['B1']
   >>> c.value
   'Apples'
   >>> 'Row ' + str(c.row) + ', Column ' + c.column + ' is ' + c.value
   'Row 1, Column B is Apples'
   >>> 'Cell ' + c.coordinate + ' is ' + c.value
   'Cell B1 is Apples'
   >>> sheet['C1'].value
   73





















