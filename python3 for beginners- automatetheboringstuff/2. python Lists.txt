List value:
-----------
Eg-1:
>>> spam = ['cat', 'bat', 'rat', 'elephant']

Eg-2:
>>> ['cat', 'bat', 'rat', 'elephant'][3]
   'elephant'

Eg-3:
>>> spam = [['cat', 'bat'], [10, 20, 30, 40, 50]]
>>> spam[0]
['cat', 'bat']
>>> spam[0][1]
'bat'


-> Python will give you an IndexError error message if you use an index that exceeds the number of values in your list value.


# Getting Sublists with Slices:

Eg:
>>> spam = ['cat', 'bat', 'rat', 'elephant']
>>> spam[0:4]
['cat', 'bat', 'rat', 'elephant']
>>> spam[1:3]
['bat', 'rat']
>>> spam[0:-1]
['cat', 'bat', 'rat']

Note: As a shortcut, you can leave out one or both of the indexes on either side of the colon in the slice. Leaving out the first index is the same as using 0, or the beginning of the list. Leaving out the second index is the same as using the length of the list, which will slice to the end of the list.

-> get length of list
Eg:
>>> spam = ['cat', 'dog', 'moose']
>>> len(spam)
3


-> Changing Values in a List with Indexes
Eg:
>>> spam = ['cat', 'bat', 'rat', 'elephant']
>>> spam[1] = 'aardvark'


-> List Concatenation and List Replication
Eg:
>>> [1, 2, 3] + ['A', 'B', 'C']
[1, 2, 3, 'A', 'B', 'C']
>>> ['X', 'Y', 'Z'] * 3
['X', 'Y', 'Z', 'X', 'Y', 'Z', 'X', 'Y', 'Z']
>>> spam = [1, 2, 3]
>>> spam = spam + ['A', 'B', 'C']
>>> spam
[1, 2, 3, 'A', 'B', 'C']


-> Removing Values from Lists with del Statements
Eg:
>>> spam = ['cat', 'bat', 'rat', 'elephant']
>>> del spam[2]
>>> spam
['cat', 'bat', 'elephant']


-> return value from range(4) is a list-like value
Eg:

-------------------
for i in range(4):
    print(i)
-------------------

above code is equivalent to 
-----------------------
for i in [0, 1, 2, 3]:
    print(i)
-----------------------

so we can loop through a list using for loop.



























